// Generated by view binder compiler. Do not edit!
package com.albertmed.sizlectorcodigos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.albertmed.sizlectorcodigos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentScanResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final Button scanAgainButton;

  @NonNull
  public final TextView scannedDataText;

  @NonNull
  public final TextView scannedDataTitle;

  private FragmentScanResultBinding(@NonNull ConstraintLayout rootView, @NonNull Button saveButton,
      @NonNull Button scanAgainButton, @NonNull TextView scannedDataText,
      @NonNull TextView scannedDataTitle) {
    this.rootView = rootView;
    this.saveButton = saveButton;
    this.scanAgainButton = scanAgainButton;
    this.scannedDataText = scannedDataText;
    this.scannedDataTitle = scannedDataTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentScanResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentScanResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_scan_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentScanResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.scan_again_button;
      Button scanAgainButton = ViewBindings.findChildViewById(rootView, id);
      if (scanAgainButton == null) {
        break missingId;
      }

      id = R.id.scanned_data_text;
      TextView scannedDataText = ViewBindings.findChildViewById(rootView, id);
      if (scannedDataText == null) {
        break missingId;
      }

      id = R.id.scanned_data_title;
      TextView scannedDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (scannedDataTitle == null) {
        break missingId;
      }

      return new FragmentScanResultBinding((ConstraintLayout) rootView, saveButton, scanAgainButton,
          scannedDataText, scannedDataTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
